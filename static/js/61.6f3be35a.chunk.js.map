{"version":3,"file":"static/js/61.6f3be35a.chunk.js","mappings":"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","sources":["../javascript/esm|T:/React Projects/VBI Music App/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|T:/React Projects/VBI Music App/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|T:/React Projects/VBI Music App/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|T:/React Projects/VBI Music App/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/tab/index.js","components/searchBar/index.js","components/SongListItem/listItem.js","pages/playlist/playlist.js","pages/home/home.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./tab.css\";\r\nfunction TabBar({setShowPlaylist}) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"tabs\">\r\n        <input\r\n          type=\"radio\"\r\n          id=\"radio-1\"\r\n          name=\"tabs\"\r\n          onClick={() => setShowPlaylist(false)}\r\n        />\r\n        <label className=\"tab\" htmlFor=\"radio-1\">\r\n          All Songs\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"radio-2\"\r\n          name=\"tabs\"\r\n          onClick={() => setShowPlaylist(true)}\r\n        />\r\n        <label className=\"tab\" htmlFor=\"radio-2\">\r\n          Playlists\r\n        </label>\r\n        <span className=\"glider\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabBar;\r\n","import \"./searchBar.css\";\r\nfunction SearchBar({handleSearch, setKeyword, keyword}) {\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={keyword}\r\n        onChange={handleSearch}\r\n        placeholder=\"Search\"\r\n        className=\"search\"\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import \"./listItem.css\";\r\n\r\nconst RenderSongList = ({\r\n  song,\r\n  albumList,\r\n  state,\r\n  setState,\r\n  selectedPlaylist,\r\n  setPlaylist,\r\n  playlist,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      onClick={() => {\r\n        if (state === 3) {\r\n          if (\r\n            playlist[selectedPlaylist].songs.find((item) => item.id === song.id)\r\n          ) {\r\n            alert(\"Song already added\");\r\n          } else {\r\n            playlist[selectedPlaylist].songs.push(song);\r\n            setPlaylist(playlist);\r\n            localStorage.setItem(\"playlist\", JSON.stringify(playlist));\r\n            setState(2);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"cardRight\">\r\n        <img src={song?.thumbnailUrl} className=\"image\" alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"cardLeft\">\r\n        <div className=\"cardTitle\">\r\n          {albumList?.find((album) => album?.id === song?.albumId)?.title}\r\n        </div>\r\n        <div className=\"desc\">{song.title}</div>\r\n      </div>\r\n      {state === 2 && (\r\n        <div\r\n          className=\"cardEnd\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            let temp = playlist[selectedPlaylist].songs.filter(\r\n              (item) => item.id !== song.id\r\n            );\r\n            playlist[selectedPlaylist].songs = temp;\r\n            setPlaylist([...playlist]);\r\n            localStorage.setItem(\"playlist\", JSON.stringify(playlist));\r\n          }}\r\n        >\r\n          x\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default RenderSongList;\r\n","import React from \"react\";\r\nimport RenderSongList from \"../../components/SongListItem/listItem\";\r\nimport \"./styles.css\";\r\n\r\nconst Playlist = ({\r\n  albumList,\r\n  state,\r\n  setState,\r\n  playlist,\r\n  setPlaylist,\r\n  selectedPlaylist,\r\n  setSelectedPlaylist,\r\n}) => {\r\n  const RenderPlaylist = ({item, index}) => {\r\n    return (\r\n      <div\r\n        className=\"item\"\r\n        onClick={() => {\r\n          setState(2);\r\n          setSelectedPlaylist(index);\r\n        }}\r\n      >\r\n        <div className=\"cardLeft\">\r\n          <div className=\"cardTitle\">{`${item?.name} (${item?.songs?.length})`}</div>\r\n          <div className=\"desc-i\">{item?.createdAt}</div>\r\n        </div>\r\n        <div\r\n          className=\"cardEnd\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            let temp = [...playlist];\r\n            temp.splice(index, 1);\r\n            setPlaylist(temp);\r\n            localStorage.setItem(\"playlist\", JSON.stringify(temp));\r\n          }}\r\n        >\r\n          x\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state !== 3 && (\r\n        <button\r\n          className=\"float-btn float-bottom\"\r\n          onClick={() => {\r\n            if (state === 1) {\r\n              let newPlaylist = [\r\n                ...playlist,\r\n                {\r\n                  name: \"Playlist\",\r\n                  songs: [],\r\n                  createdAt: new Date().toDateString(),\r\n                },\r\n              ];\r\n              setPlaylist(newPlaylist);\r\n              localStorage.setItem(\"playlist\", JSON.stringify(newPlaylist));\r\n            } else {\r\n              setState(3);\r\n            }\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      )}\r\n      {state !== 1 && (\r\n        <button\r\n          className=\"float-btn float-top\"\r\n          onClick={() => {\r\n            if (state === 2) {\r\n              setSelectedPlaylist(null);\r\n              setState(1);\r\n            } else {\r\n              setState(2);\r\n            }\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      )}\r\n      {state === 2 && (\r\n        <button\r\n          className=\"float-btn float-right\"\r\n          onClick={() => {\r\n            let shuffledsongs = playlist[selectedPlaylist].songs.sort(\r\n              (a, b) => 0.5 - Math.random()\r\n            );\r\n            playlist[selectedPlaylist].songs = shuffledsongs;\r\n            setPlaylist([...playlist]);\r\n          }}\r\n        >\r\n          Shuffle\r\n        </button>\r\n      )}\r\n      {state !== 1 && (\r\n        <div className=\"playlistTitle\">\r\n          {state === 3 && \"Add songs to \"}\r\n          {`${playlist[selectedPlaylist]?.name} (${playlist[selectedPlaylist]?.songs?.length})`}\r\n        </div>\r\n      )}\r\n      {state === 1 &&\r\n        (playlist.length ? (\r\n          playlist?.map((item, index) => (\r\n            <RenderPlaylist key={item?.createdAt} item={item} index={index} />\r\n          ))\r\n        ) : (\r\n          <div>Create a playlist!</div>\r\n        ))}\r\n      {state === 2 &&\r\n        (playlist?.[selectedPlaylist]?.songs.length ? (\r\n          playlist?.[selectedPlaylist]?.songs?.map((item) => (\r\n            <RenderSongList\r\n              key={item.id}\r\n              song={item}\r\n              albumList={albumList}\r\n              state={state}\r\n              playlist={playlist}\r\n              setPlaylist={setPlaylist}\r\n              selectedPlaylist={selectedPlaylist}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div>Add a song to the list!</div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default Playlist;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport AppSpinner from \"../../components/spinner\";\r\nimport TabBar from \"../../components/tab\";\r\nimport SearchBar from \"../../components/searchBar\";\r\nimport Playlist from \"../playlist/playlist\";\r\nimport RenderSongList from \"../../components/SongListItem/listItem\";\r\nimport \"./styles.css\";\r\n\r\nconst Home = () => {\r\n  const [songList, setSongList] = useState();\r\n  const [searchRes, setSearchRes] = useState();\r\n  const [albumList, setAlbumList] = useState();\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  // =====================================\r\n  // playlist props\r\n  // playlist has 3 states\r\n  // 1. listing playlists\r\n  // 2. listing songs within a playlist\r\n  // 3. listing all songs with search for adding to playlist\r\n  //========================================================\r\n  const [state, setState] = useState(1);\r\n  const [playlist, setPlaylist] = useState(\r\n    JSON.parse(localStorage.getItem(\"playlist\")) || []\r\n  );\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n\r\n  // Retriving cached data or calling the api\r\n  useEffect(() => {\r\n    const songs = JSON.parse(localStorage.getItem(\"songs\"));\r\n    const albums = JSON.parse(localStorage.getItem(\"albums\"));\r\n    if (songs && albums) {\r\n      setSongList(songs);\r\n      setSearchRes(songs);\r\n      setAlbumList(albums);\r\n    } else {\r\n      Promise.all([\r\n        fetch(\"https://jsonplaceholder.typicode.com/photos\").then((value) =>\r\n          value.json()\r\n        ),\r\n        fetch(\" https://jsonplaceholder.typicode.com/albums\").then((value) =>\r\n          value.json()\r\n        ),\r\n      ]).then(([songs, albums]) => {\r\n        setSongList(songs);\r\n        setAlbumList(albums);\r\n        localStorage.setItem(\"songs\", JSON.stringify(songs));\r\n        localStorage.setItem(\"albums\", JSON.stringify(albums));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Search Function\r\n  function handleSearch(e) {\r\n    setKeyword(e.target.value);\r\n    let res = songList.filter((item) => item.title.includes(e.target.value));\r\n    setSearchRes([...res]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"homebody\">\r\n      {songList?.length ? (\r\n        <>\r\n          <TabBar setShowPlaylist={setShowPlaylist} />\r\n          <div className=\"ListBody\">\r\n            {showPlaylist && (\r\n              <Playlist\r\n                albumList={albumList}\r\n                state={state}\r\n                setState={setState}\r\n                playlist={playlist}\r\n                setPlaylist={setPlaylist}\r\n                selectedPlaylist={selectedPlaylist}\r\n                setSelectedPlaylist={setSelectedPlaylist}\r\n              />\r\n            )}\r\n            {(!showPlaylist || state === 3) && (\r\n              <>\r\n                <SearchBar\r\n                  handleSearch={handleSearch}\r\n                  keyword={keyword}\r\n                  setKeyword={setKeyword}\r\n                />\r\n                {searchRes?.length ? (\r\n                  searchRes.map((song) => {\r\n                    return (\r\n                      <RenderSongList\r\n                        key={song.id}\r\n                        song={song}\r\n                        albumList={albumList}\r\n                        state={state}\r\n                        setState={setState}\r\n                        selectedPlaylist={selectedPlaylist}\r\n                        setPlaylist={setPlaylist}\r\n                        playlist={playlist}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div>No Results</div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <AppSpinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","setShowPlaylist","className","type","id","name","onClick","htmlFor","handleSearch","keyword","setKeyword","value","onChange","placeholder","song","albumList","state","setState","selectedPlaylist","setPlaylist","playlist","songs","find","item","alert","push","localStorage","setItem","JSON","stringify","src","thumbnailUrl","alt","album","albumId","title","e","stopPropagation","temp","filter","setSelectedPlaylist","RenderPlaylist","index","length","createdAt","splice","newPlaylist","Date","toDateString","shuffledsongs","sort","a","b","Math","random","map","useState","songList","setSongList","searchRes","setSearchRes","setAlbumList","showPlaylist","parse","getItem","useEffect","albums","Promise","all","fetch","then","json","target","res","includes"],"sourceRoot":""}